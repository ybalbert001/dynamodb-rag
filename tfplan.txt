
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.online_processor will be updated in-place
  ~ resource "aws_cloudwatch_log_group" "online_processor" {
        id                = "/aws/lambda/translate_tool"
        name              = "/aws/lambda/translate_tool"
      ~ retention_in_days = 14 -> 30
        tags              = {}
        # (6 unchanged attributes hidden)
    }

  # aws_iam_role_policy.online_processor_policy will be updated in-place
  ~ resource "aws_iam_role_policy" "online_processor_policy" {
        id          = "iam_for_lambda:online_processor_policy"
        name        = "online_processor_policy"
      ~ policy      = jsonencode(
          ~ {
              ~ Statement = [
                  ~ {
                      ~ Action   = [
                            # (2 unchanged elements hidden)
                            "s3:Get*",
                          + "iam:*",
                            "ec2:DescribeNetworkInterfaces",
                            # (3 unchanged elements hidden)
                        ]
                        # (2 unchanged attributes hidden)
                    },
                    {
                        Action   = [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:DeleteObject",
                        ]
                        Effect   = "Allow"
                        Resource = "arn:aws:s3:::docupload-845524701534-musical-sheep/*"
                    },
                    # (1 unchanged element hidden)
                ]
                # (1 unchanged attribute hidden)
            }
        )
        # (2 unchanged attributes hidden)
    }

  # aws_lambda_function.online_processor will be updated in-place
  ~ resource "aws_lambda_function" "online_processor" {
        id                             = "translate_tool"
      ~ image_uri                      = "845524701534.dkr.ecr.us-east-1.amazonaws.com/musical-sheep@sha256:9d6e119b6829385ecb2f017e174ce25a1201a7076b22cd7cb1de6d9fd94ca49a" -> (known after apply)
      ~ last_modified                  = "2024-07-06T16:34:35.000+0000" -> (known after apply)
        tags                           = {}
        # (26 unchanged attributes hidden)

        # (5 unchanged blocks hidden)
    }

  # module.docker_build.docker_image.this must be replaced
-/+ resource "docker_image" "this" {
      ~ id           = "sha256:d607af350a441889074633840f6f4d7dc5af0144705ef47b75d114261d932ccc845524701534.dkr.ecr.us-east-1.amazonaws.com/musical-sheep" -> (known after apply)
      ~ image_id     = "sha256:d607af350a441889074633840f6f4d7dc5af0144705ef47b75d114261d932ccc" -> (known after apply)
        name         = "845524701534.dkr.ecr.us-east-1.amazonaws.com/musical-sheep"
      ~ repo_digest  = "845524701534.dkr.ecr.us-east-1.amazonaws.com/musical-sheep@sha256:9d6e119b6829385ecb2f017e174ce25a1201a7076b22cd7cb1de6d9fd94ca49a" -> (known after apply)
      ~ triggers     = { # forces replacement
          ~ "dir_sha" = "9ca27496a797472b3eaab3d5331bd36e7bb58e46" -> "216f58941f700782d9f6421784f540dc1babc7fb"
        }
        # (2 unchanged attributes hidden)

      - build {
          - build_arg       = {} -> null
          - build_args      = {
              - "FOO" = "bar"
            } -> null
          - cache_from      = [] -> null
          - context         = "code/online_process" -> null
          - cpu_period      = 0 -> null
          - cpu_quota       = 0 -> null
          - cpu_shares      = 0 -> null
          - dockerfile      = "Dockerfile" -> null
          - extra_hosts     = [] -> null
          - force_remove    = false -> null
          - label           = {} -> null
          - labels          = {} -> null
          - memory          = 0 -> null
          - memory_swap     = 0 -> null
          - no_cache        = false -> null
          - platform        = "linux/amd64" -> null
          - pull_parent     = false -> null
          - remove          = true -> null
          - security_opt    = [] -> null
          - shm_size        = 0 -> null
          - squash          = false -> null
          - suppress_output = false -> null
          - tag             = [] -> null
            # (10 unchanged attributes hidden)
        }
      + build {
          + build_args     = {
              + "FOO" = "bar"
            }
          + cache_from     = []
          + context        = "code/online_process"
          + dockerfile     = "Dockerfile"
          + extra_hosts    = []
          + platform       = "linux/amd64"
          + remove         = true
          + security_opt   = []
          + tag            = []
            # (10 unchanged attributes hidden)
        }
    }

  # module.docker_build.docker_registry_image.this must be replaced
-/+ resource "docker_registry_image" "this" {
      ~ id                   = "sha256:9d6e119b6829385ecb2f017e174ce25a1201a7076b22cd7cb1de6d9fd94ca49a" -> (known after apply)
        name                 = "845524701534.dkr.ecr.us-east-1.amazonaws.com/musical-sheep"
      ~ sha256_digest        = "sha256:9d6e119b6829385ecb2f017e174ce25a1201a7076b22cd7cb1de6d9fd94ca49a" -> (known after apply)
      ~ triggers             = { # forces replacement
          ~ "dir_sha" = "9ca27496a797472b3eaab3d5331bd36e7bb58e46" -> "216f58941f700782d9f6421784f540dc1babc7fb"
        }
        # (2 unchanged attributes hidden)
    }

Plan: 2 to add, 3 to change, 2 to destroy.
