
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # aws_cloudwatch_log_group.online_processor will be updated in-place
  ~ resource "aws_cloudwatch_log_group" "online_processor" {
        id                = "/aws/lambda/translate_tool"
        name              = "/aws/lambda/translate_tool"
      ~ retention_in_days = 14 -> 30
        tags              = {}
        # (6 unchanged attributes hidden)
    }

  # aws_iam_role_policy.online_processor_policy will be updated in-place
  ~ resource "aws_iam_role_policy" "online_processor_policy" {
        id          = "iam_for_lambda:online_processor_policy"
        name        = "online_processor_policy"
      ~ policy      = jsonencode(
          ~ {
              ~ Statement = [
                  ~ {
                      ~ Action   = [
                            # (2 unchanged elements hidden)
                            "s3:Get*",
                          + "iam:*",
                            "ec2:DescribeNetworkInterfaces",
                            # (3 unchanged elements hidden)
                        ]
                        # (2 unchanged attributes hidden)
                    },
                    {
                        Action   = [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:DeleteObject",
                        ]
                        Effect   = "Allow"
                        Resource = "arn:aws:s3:::docupload-845524701534-musical-sheep/*"
                    },
                    # (1 unchanged element hidden)
                ]
                # (1 unchanged attribute hidden)
            }
        )
        # (2 unchanged attributes hidden)
    }

Plan: 0 to add, 2 to change, 0 to destroy.
